"""Initial migration

Revision ID: 07912eed9e00
Revises: 
Create Date: 2025-04-24 11:12:12.015095

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '07912eed9e00'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('practice_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('category', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_skill_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_skill_name'), ['name'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('bonsai_growth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('branch_count', sa.Integer(), nullable=True),
    sa.Column('last_growth_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('student_upload',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('practice_test_id', sa.Integer(), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=True),
    sa.Column('temp_storage_ref', sa.String(length=256), nullable=True),
    sa.Column('processing_status', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['practice_test_id'], ['practice_test.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('student_upload', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_student_upload_upload_timestamp'), ['upload_timestamp'], unique=False)

    op.create_table('user_skill_progress',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('custom_quiz',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('student_upload_id', sa.Integer(), nullable=False),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('completed_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_upload_id'], ['student_upload.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('custom_quiz', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_custom_quiz_creation_timestamp'), ['creation_timestamp'], unique=False)

    op.create_table('missed_skill',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('student_upload_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('identified_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['student_upload_id'], ['student_upload.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('custom_quiz_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('options_json', sa.Text(), nullable=True),
    sa.Column('correct_option', sa.String(length=16), nullable=True),
    sa.Column('generation_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['custom_quiz_id'], ['custom_quiz.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quiz_question_id', sa.Integer(), nullable=False),
    sa.Column('submitted_answer', sa.String(length=16), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('attempt_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_question_id'], ['quiz_question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('video_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('quiz_attempt_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('queue_timestamp', sa.DateTime(), nullable=True),
    sa.Column('delivery_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['quiz_attempt_id'], ['quiz_attempt.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('video_queue', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_video_queue_queue_timestamp'), ['queue_timestamp'], unique=False)

    op.create_table('video_lesson',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('video_queue_id', sa.Integer(), nullable=True),
    sa.Column('video_ref', sa.String(length=256), nullable=True),
    sa.Column('generation_timestamp', sa.DateTime(), nullable=True),
    sa.Column('watched_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['video_queue_id'], ['video_queue.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('practice_question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('video_lesson_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('options_json', sa.Text(), nullable=True),
    sa.Column('correct_option', sa.String(length=16), nullable=True),
    sa.Column('generation_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skill.id'], ),
    sa.ForeignKeyConstraint(['video_lesson_id'], ['video_lesson.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('practice_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('practice_question_id', sa.Integer(), nullable=False),
    sa.Column('submitted_answer', sa.String(length=16), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('attempt_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['practice_question_id'], ['practice_question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('practice_attempt')
    op.drop_table('practice_question')
    op.drop_table('video_lesson')
    with op.batch_alter_table('video_queue', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_video_queue_queue_timestamp'))

    op.drop_table('video_queue')
    op.drop_table('quiz_attempt')
    op.drop_table('quiz_question')
    op.drop_table('missed_skill')
    with op.batch_alter_table('custom_quiz', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_custom_quiz_creation_timestamp'))

    op.drop_table('custom_quiz')
    op.drop_table('user_skill_progress')
    with op.batch_alter_table('student_upload', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_student_upload_upload_timestamp'))

    op.drop_table('student_upload')
    op.drop_table('bonsai_growth')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('skill', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_skill_name'))
        batch_op.drop_index(batch_op.f('ix_skill_category'))

    op.drop_table('skill')
    op.drop_table('practice_test')
    # ### end Alembic commands ###
